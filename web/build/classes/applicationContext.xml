<?xml version="1.0" encoding="UTF-8"?>  
<beans  xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
							http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
							http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">	
		<!-- 设置需要进行Spring注解扫描的类包 -->
		<context:component-scan base-package="com.share">
			<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		</context:component-scan>
		
		 <!-- 国际化的消息资源文件 -->
	    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
	        <property name="basenames">
	            <list>
	                <!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找  -->
	                <value>classpath:messages</value>
	            </list>
	        </property>
	        <property name="defaultEncoding" value="UTF-8"/>
	        <property name="cacheSeconds" value="60"/>
	    </bean>
		
		<!-- jdbc连接的资源文件 -->
		<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	        <property name="locations">
	            <list>
	                <value>classpath:jdbc.properties</value>
	            </list>
	        </property>
	    </bean>
	    
		<!--数据源 -->
		<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
			<property name="alias" value="proxoolDataSource"/>
			<property name="driver" value="${connection.driver_class}" />
			<property name="driverUrl" value="${connection.url}" />
			<property name="user" value="${connection.username}" />
			<property name="password" value="${connection.password}" />
			<property name="maximumConnectionCount" value="${proxool.maximum.connection.count}"/>
			<property name="minimumConnectionCount" value="${proxool.minimum.connection.count}" />
			<property name="statistics" value="${proxool.statistics}" />
			<property name="simultaneousBuildThrottle" value="${proxool.simultaneous.build.throttle}"/>
			<!--  
			<property name="houseKeepingTestSql" value="select CURRENT_DATE"/> -->
		</bean>
	
	  	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
	  		<!--设置 Hibernate数据源 -->
	    	<property name="dataSource" ref="dataSource"/>
	    	<!-- 指定搜索自动检测的实体类在包中的路径 -->
	    	<property name="packagesToScan">
				<list>
					<value>com.share.model</value>
				</list>
			</property>
			
			<!-- 设置Hibernate属性 -->
	        <property name="hibernateProperties">
	            <props>
	                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
	                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
	                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
	                <prop key="hibernate.format_sql">true</prop>
	                <prop key="hibernate.query.substitutions">${hibernate.query.substitutions}</prop>
	                <prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>
	                <prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
	                <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
	                <prop key="hibernate.bytecode.use_reflection_optimizer">${hibernate.bytecode.use_reflection_optimizer}</prop>
	
	                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
	                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
	                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
	                <prop key="net.sf.ehcache.configurationResourceName">${net.sf.ehcache.configurationResourceName}</prop>
	                <prop key="hibernate.cache.use_structured_entries">${hibernate.cache.use_structured_entries}</prop>
	            </props>
	        </property>
	        
	        <!-- 由Hibernate管理的模型类
	        <property name="annotatedClasses">
				<list>
					<value>com.share.model.User</value>
				</list>
			</property>   -->
	  	</bean>
		
		<!-- 配置事务管理器 -->
		<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
			<property name="sessionFactory" ref="sessionFactory"/>
		</bean>
		
		<!-- 使用AspectJ方式配置AOP -->
		<aop:aspectj-autoproxy proxy-target-class="true" />
		<aop:config proxy-target-class="true" />
	
		<!-- 开启事物注解,配置Spring事物-->
		<tx:annotation-driven transaction-manager="txManager"/>
		
		<tx:advice id="txAdvice" transaction-manager="txManager">
			<tx:attributes>
				<tx:method name="save*" propagation="REQUIRED"/>
				<tx:method name="delete*" propagation="REQUIRED"/>
				<tx:method name="update*" propagation="REQUIRED"/>
				<tx:method name="list*" propagation="REQUIRED" read-only="true"/>
				<tx:method name="getAll*" propagation="REQUIRED" read-only="true"/>
				<tx:method name="iterator*" propagation="REQUIRED" read-only="true"/>
				<tx:method name="hqlQuery" propagation="REQUIRED" read-only="true"/>
				<tx:method name="createQuery" propagation="REQUIRED" read-only="true"/>	
				<!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到-->
				<tx:method name="flush" propagation="REQUIRED" read-only="true" />
				<tx:method name="clear" propagation="REQUIRED" read-only="true" />
				<tx:method name="evict" propagation="REQUIRED" read-only="true" />
	            <tx:method name="get*" propagation="REQUIRED" read-only="true" />
	            <tx:method name="count*" propagation="REQUIRED" read-only="true" />
	            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
	            <tx:method name="list*" propagation="REQUIRED" read-only="true" />
				<tx:method name="*" propagation="REQUIRED" read-only="true"/>
			</tx:attributes>
		</tx:advice>
		
		<!-- 配置哪些类的哪些方法参与事务 -->
		<aop:config>
			<aop:advisor pointcut="execution(* com.share.service..*.*(..))" advice-ref="txAdvice" />
		</aop:config>
		
		<!-- 引入WebService(CXF) -->
		<import resource="classpath*:META-INF/cxf/cxf.xml" />  
	    <import resource="classpath*:META-INF/cxf/cxf-extension-soap.xml" />  
	    <import resource="classpath*:META-INF/cxf/cxf-servlet.xml" />  
	    <import resource="classpath:webservice/services.xml" />
	    <import resource="classpath:webservice/client.xml" />
</beans>