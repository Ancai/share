<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"	   
	   xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
 
  <context:component-scan base-package="com.vrv.ccp.dao,com.vrv.ccp.service,install" />

  <bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
  	<property name="locations" value="classpath:jdbc.properties" />
  </bean>
  
  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    <property name="driverClass" value="${driverName}" />
    <property name="jdbcUrl" value="${url}" />
    <property name="user" value="${username}" />
    <property name="password" value="${password}" />
    <property name="maxPoolSize" value="${c3p0.pool.maxsize}" />
    <property name="minPoolSize" value="${c3p0.pool.minsize}" />
    <property name="acquireIncrement" value="${c3p0.pool.increment}" />
    <property name="initialPoolSize" value="${c3p0.pool.inisize}" />
  </bean> 
  
  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
  	<property name="dataSource" ref="dataSource"/>
  	<property name="packagesToScan">
		<list>
			<value>com.vrv.ccp.domain</value>
			<value>com.vrv.ccp.model</value>
		</list>
	</property>
  	<property name="hibernateProperties">
       <value>
           hibernate.dialect=${dialect}
           hibernate.hbm2ddl.auto=${hibernate.hbm2ddl.auto}
           hibernate.show_sql=${hibernate.show_sql}
           hibernate.cache.provider_class=${hibernate.cache.provider_class}
		   hibernate.cache.use_second_level_cache=${hibernate.cache.use_second_level_cache}
		   hibernate.cache.use_query_cache=${hibernate.cache.use_query_cache}
		   hibernate.jdbc.fetch_size=${hibernate.jdbc.fetch_size}
       </value>
    </property>
  </bean>
  
  <bean id="jdbcTemp" class="org.springframework.jdbc.core.JdbcTemplate">
  	 <property name="dataSource" ref="dataSource"></property>
  </bean>
  
  <!-- 配置事务开始 -->
  <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
     <property name="sessionFactory" ref="sessionFactory" />
  </bean>
    
  <tx:annotation-driven transaction-manager="txManager"/>
  
  <tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*save*" propagation="REQUIRED"/>
			<tx:method name="*delete*" propagation="REQUIRED"/>
			<tx:method name="*update*" propagation="REQUIRED"/>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="query*" read-only="true"/>
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* com.vrv.ccp.service..*.*(..))" advice-ref="txAdvice" />
	</aop:config>
	<!-- 配置事务结束 -->
  
  
  <!-- 测试 
  <import resource="applicationContext-test.xml"/>
  -->
</beans>